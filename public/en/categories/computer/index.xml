<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer on ScienceChronicle</title>
    <link>https://www.ScienceChronicle.org/en/categories/computer/</link>
    <description>Recent content in Computer on ScienceChronicle</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 17 Sep 2024 03:58:40 +0000</lastBuildDate><atom:link href="https://www.ScienceChronicle.org/en/categories/computer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>User inactivity detection in Linux</title>
      <link>https://www.ScienceChronicle.org/en/article/user-inactivity-detection-in-linux/</link>
      <pubDate>Tue, 17 Sep 2024 03:58:40 +0000</pubDate>
      
      <guid>https://www.ScienceChronicle.org/en/article/user-inactivity-detection-in-linux/</guid>
      <description>We want to detect user inactivity on Linux system in a bash service run by systemd. Why? When user is inactive, we can launch some CPU-heavy tasks without disrupting user&amp;rsquo;s interaction with the system.
A user has 2 primary ways of interaction with Linux system: through textual terminal or UI desktop like Cinnamon, Xface, etc. The methods of user (in)activity detection are different for terminal and UI.
UI environment We conduct our tests on Linux Mint 20.</description>
    </item>
    
    <item>
      <title>Select non-duplicates: SQL interview question</title>
      <link>https://www.ScienceChronicle.org/en/article/select-non-duplicates-sql-interview-question/</link>
      <pubDate>Mon, 09 Sep 2024 11:52:37 +0000</pubDate>
      
      <guid>https://www.ScienceChronicle.org/en/article/select-non-duplicates-sql-interview-question/</guid>
      <description>Task definition We define the following schema:
CREATE TABLE dup(id SERIAL PRIMARY KEY, email TEXT NOT NULL, phone NOT NULL); Duplicate rows are defined as two or more rows which have the same email OR phone columns.
Our task is to write SQL which selects rows which have no duplicates initially and also any single row which represents a group of duplicates.
Solution Naive solution The straigtforward and incorrect approach is to apply DISTINCT serially.</description>
    </item>
    
    <item>
      <title>Installing Perl::LanguageServer fails because IO:AIO error: c compiler cannot create executables</title>
      <link>https://www.ScienceChronicle.org/en/article/perl-language-server-io-aio-c-compiler-cannot-create-executables/</link>
      <pubDate>Fri, 06 Sep 2024 11:52:37 +0000</pubDate>
      
      <guid>https://www.ScienceChronicle.org/en/article/perl-language-server-io-aio-c-compiler-cannot-create-executables/</guid>
      <description>The problem While attempting to install Perl::LanguageServer on my Linux Mint 20.3 Una, the following command:
cpan install Perl::LanguageServer failed, reporting that the IO::AIO dependency was unsatisfied.
I tried installing the IO::AIO module separately:
cpan install IO::AIO However, this resulted in the following error:
Continue anyways? [y] y checking for gcc... x86_64-linux-gnu-gcc checking whether the C compiler works... no configure: error: in `/home/morpher/.cpan/build/IO-AIO-4.81-7&amp;#39;: configure: error: C compiler cannot create executables See `config.</description>
    </item>
    
    <item>
      <title>Round-robin load-balancing between two VPNs with iptables and policy-based routing</title>
      <link>https://www.ScienceChronicle.org/en/article/round-robin-load-balancing-between-two-vpns-with-iptables-and-pbr/</link>
      <pubDate>Sun, 09 Jun 2024 11:52:37 +0000</pubDate>
      
      <guid>https://www.ScienceChronicle.org/en/article/round-robin-load-balancing-between-two-vpns-with-iptables-and-pbr/</guid>
      <description>Experiment 1 We want to send http traffik generated by our computer through a VPN tunnel.
VPN tunnels Create two VPN tunnels:
openvpn --config au.ovpn openvpn --config at.ovpn Two new interfaces will be created: tun0 and tun1.
Two configs should prevent setting of default gateways:
pull-filter ignore redirect-gateway Routing Create a new routing table:
echo &amp;#34;201 vpn1&amp;#34; &amp;gt;&amp;gt; /etc/iproute2/rt_tables and add default routing to the table:
ip route add default dev tun1 table vpn1 Check:</description>
    </item>
    
    <item>
      <title>Similarity between SQL and iptables Rules</title>
      <link>https://www.ScienceChronicle.org/en/article/similarity-between-sql-and-iptables-rules/</link>
      <pubDate>Sun, 09 Jun 2024 11:52:37 +0000</pubDate>
      
      <guid>https://www.ScienceChronicle.org/en/article/similarity-between-sql-and-iptables-rules/</guid>
      <description>Similarity between SQL and iptables Rules When dealing with databases and network packet filtering, there is an intriguing conceptual similarity between how SQL queries operate on rows in a database table and how iptables rules operate on network packets. This analogy can provide a deeper understanding of both systems by drawing parallels between their operations.
Similarities Between iptables and SQL Sequential Processing:
SQL: In SQL, when a query is executed, each row in the table is processed sequentially, applying the specified conditions and operations.</description>
    </item>
    
    <item>
      <title>Network based message collector with socat</title>
      <link>https://www.ScienceChronicle.org/en/article/network-based-message-collector-with-socat/</link>
      <pubDate>Thu, 30 May 2024 11:52:37 +0000</pubDate>
      
      <guid>https://www.ScienceChronicle.org/en/article/network-based-message-collector-with-socat/</guid>
      <description>Overview The simplest message collector code can be implemented with socat:
socat -u TCP4-LISTEN:4444,reuseaddr,fork OPEN:/tmp/log.txt,creat,append It will listen on tcp port 4444, it can accept multiple simultaneous connections which guarantees no connection is refused and it will write the data recieved on the port to /tmp/log.txt, appending to the file if it already exists or creating a new if it does not.
The sender can be implemented in many ways, for example:</description>
    </item>
    
  </channel>
</rss>
